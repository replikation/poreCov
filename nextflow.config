manifest {
    mainScript = 'poreCov.nf'
    name = 'poreCov'
    nextflowVersion = '!>=24.10.4'
}

// default parameters
params {
    max_cores = Runtime.runtime.availableProcessors()
    cores = Runtime.runtime.availableProcessors().intdiv(4)
    memory = '12'
    help = false
    profile = false

    // inputs
    fast5 = ''
    fasta = ''
    multifasta = ''
    fastq = ''
    fastq_pass = ''
    list = false
    samples = false

    artic_normalize = 500

    // consensus qc
    reference_for_qc = ''
    seq_threshold = '0.90'
    n_threshold = '0.05'
    min_depth = '20'

    // settings
    buildDB = false
    cloudProcess = false
    extended = false
    freyja = false
    freyja_update = false
    guppy_cpu = false
    guppy_model = 'dna_r9.4.1_450bps_hac.cfg'
    krakendb = ''
    lcs = false
    localguppy = false
    medaka_model = 'r941_min_hac_g507'
    nanopolish = ''
    one_end = false
    single = false
    update = false
    screen_reads = false
    lcs_ucsc_version = 'predefined' // e.g. '2022-05-01' marker-table date
    lcs_ucsc_predefined = '2023-01-26'
    lcs_ucsc_update = false // update marker table, overrides lcs_ucsc_version
    lcs_ucsc_downsampling = 10000 // 'None' to turn off
    lcs_variant_groups = 'default' // 'default' to use file from repo; custom variant groups table for marker-table update
    lcs_cutoff = 0.03
    defaultpangolin = 'nanozoo/pangolin-v4:4.3--1.25.1'
    defaultnextclade = 'nanozoo/nextclade3:3.2.1--2024-02-16'
    scorpio = false

    // parameters
    primerV = 'V3'
    minLength = false
    maxLength = false
    rapid = false

    // folder structure
    cachedir = "singularity_images"
    databases = "databases"

    output = 'results'
    readsdir = "0.Fastq_reads"
    readqcdir = "1.Read_quality"
    genomedir = "2.Genomes"
    lineagedir = "3.Lineages_Clades_Mutations"
    rkidir = "4.RKI-summary"
    seqrepair = "5.Genome-primer-repair"
    jsondir = "6.json-summaries"
    runinfodir = "X.Pipeline-runinfo"
}

// runinfo
def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file = "${params.output}/${params.runinfodir}/execution_timeline_${trace_timestamp}.html"
}

report {
  enabled = true
  file = "${params.output}/${params.runinfodir}/execution_report_${trace_timestamp}.html"
}


profiles {

    test_fastq {
        params.primerV = 'V1200'
    }

    stub {
        params.primerV = 'V1200'
    }

    test_fasta {
    }

    test_fast5 {
        params.single = true
    }


    local {
        workDir = "work/nextflow-poreCov-$USER"
        includeConfig 'configs/local.config'
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.memory
        }

        //process.errorStrategy = 'ignore'
    }

    slurm {
        includeConfig 'configs/nodes.config'
        executor {
            name = "slurm"
            queueSize = 100
            // exitReadTimeout = "360 sec"
            // submitRateLimit = '1 / 2 s'
            // pollInterval = '30 sec'
        }        
        process.cache = "lenient"


        process.errorStrategy = 'retry'
        process.maxRetries = 1
    }

    docker {
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    singularity {
        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.cachedir
                envWhitelist = "HTTPS_PROXY,HTTP_PROXY,http_proxy,https_proxy,FTP_PROXY,ftp_proxy"
                //runOptions = "-B /tmp/nextflow-nCov-$USER"
        }
        includeConfig 'configs/container.config'
    }
    
    nanozoo {
        timeline { enabled = false }
        report { enabled = false }
        docker { enabled = true }
        google { 
            lifeSciences.preemptible = true
            lifeSciences.bootDiskSize = 20.GB
        }  
        includeConfig 'configs/nodes.config'
        includeConfig 'configs/container.config'

        // cloud error strategy
        process.errorStrategy = { task.exitStatus in [14,143,137,104,134,139] ? 'retry' : 'ignore' }
        process.maxRetries = 3
        }

    ukj_cloud { 
        workDir = "/tmp/nextflow-poreCov-$USER"
        docker { enabled = true }
        params.databases = 'gs://databases-case-grp/poreCov/'
        bucketDir = 'gs://case-tmp-dir/poreCov/'
        google {  
            project = 'case-dev-302214'
            zone = 'europe-west1-b,europe-west1-c,europe-west3-b,europe-west3-a,europe-west4-b,europe-west4-a'
            lifeSciences.preemptible = true
            lifeSciences.bootDiskSize = 20.GB
            }
        includeConfig 'configs/container.config'
        includeConfig 'configs/nodes.config'

        // cloud error strategy
        process { 
            errorStrategy = { task.exitStatus in [10,14,143,137,104,134,139] ? 'retry' : 'ignore' }
            maxRetries = 3
            executor = 'google-lifesciences'
        }
    }
}
